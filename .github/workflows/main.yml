# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE: ghcr.io/0xsirsaif/text-summ-app/summarizer

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Log into Github Container Registry
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest



      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./text-summ/Dockerfile.prod \
            "./text-summ"



      - name: Push image
        run: |
          docker push ${{ env.IMAGE }}:latest




  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Log in to GitHub Container Registry
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest



      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./text-summ/Dockerfile.prod \
            "./text-summ"



      - name: Run container
        run: |
          docker run \
            -d \
            --name text-summ-app \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_URL=sqlite://sqlite.db \
            -e DATABASE_TEST_URL=sqlite://sqlite.db \
            -p 5003:8765 \
            ${{ env.IMAGE }}:latest



      - name: Pytest
        run: docker exec text-summ-app python -m pytest .

      - name: Flake8
        run: docker exec text-summ-app python -m flake8 .

      - name: Black
        run: docker exec text-summ-app python -m black .

      - name: isort
        run: docker exec text-summ-app python -m isort .

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [ build, test ]
    env:
      HEROKU_APP_NAME: radiant-depths-61941
      HEROKU_REGISTRY_IMAGE: registry.heroku.com/${HEROKU_APP_NAME}/summarizer
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          ref: main

      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: |
          docker pull ${{ env.IMAGE }}:latest

      - name: Build image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.HEROKU_REGISTRY_IMAGE }}:latest \
            --file ./text-summ/Dockerfile.prod \
            "./text-summ"

      - name: Log in to the Heroku Container Registry
        run: docker login -u _ -p ${HEROKU_AUTH_SECRET} registry.heroku.com
        env:
          HEROKU_AUTH_SECRET: ${{ secrets.HEROKU_AUTH_SECRET }}

      - name: Push to the registry
        run: docker push ${{ env.HEROKU_REGISTRY_IMAGE }}

      - name: Set environment variables
        run: |
          echo "HEROKU_REGISTRY_IMAGE=${{ env.HEROKU_REGISTRY_IMAGE }}" >> $GITHUB_ENV
          echo "HEROKU_AUTH_SECRET=${{ secrets.HEROKU_AUTH_SECRET }}" >> $GITHUB_ENV

      - name: Release
        run: |
          chmod +x ./release.sh
          ./release.sh